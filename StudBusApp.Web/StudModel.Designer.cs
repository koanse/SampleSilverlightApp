//------------------------------------------------------------------------------
// <auto-generated>
//    Этот код был создан из шаблона.
//
//    Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//    Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region Метаданные связи EDM

[assembly: EdmRelationshipAttribute("dbModel", "FK_Студент_Группа", "Группа", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(StudBusApp.Web.Группа), "Студент", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudBusApp.Web.Студент), true)]
[assembly: EdmRelationshipAttribute("dbModel", "FK_Оценка_Дисциплина", "Дисциплина", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StudBusApp.Web.Дисциплина), "Оценка", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudBusApp.Web.Оценка), true)]
[assembly: EdmRelationshipAttribute("dbModel", "FK_Оценка_Студент", "Студент", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(StudBusApp.Web.Студент), "Оценка", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(StudBusApp.Web.Оценка), true)]

#endregion

namespace StudBusApp.Web
{
    #region Контексты
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    public partial class dbEntities : ObjectContext
    {
        #region Конструкторы
    
        /// <summary>
        /// Инициализирует новый объект dbEntities, используя строку соединения из раздела "dbEntities" файла конфигурации приложения.
        /// </summary>
        public dbEntities() : base("name=dbEntities", "dbEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта dbEntities.
        /// </summary>
        public dbEntities(string connectionString) : base(connectionString, "dbEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта dbEntities.
        /// </summary>
        public dbEntities(EntityConnection connection) : base(connection, "dbEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Разделяемые методы
    
        partial void OnContextCreated();
    
        #endregion
    
        #region Свойства ObjectSet
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Группа> Группа
        {
            get
            {
                if ((_Группа == null))
                {
                    _Группа = base.CreateObjectSet<Группа>("Группа");
                }
                return _Группа;
            }
        }
        private ObjectSet<Группа> _Группа;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Дисциплина> Дисциплина
        {
            get
            {
                if ((_Дисциплина == null))
                {
                    _Дисциплина = base.CreateObjectSet<Дисциплина>("Дисциплина");
                }
                return _Дисциплина;
            }
        }
        private ObjectSet<Дисциплина> _Дисциплина;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Оценка> Оценка
        {
            get
            {
                if ((_Оценка == null))
                {
                    _Оценка = base.CreateObjectSet<Оценка>("Оценка");
                }
                return _Оценка;
            }
        }
        private ObjectSet<Оценка> _Оценка;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Студент> Студент
        {
            get
            {
                if ((_Студент == null))
                {
                    _Студент = base.CreateObjectSet<Студент>("Студент");
                }
                return _Студент;
            }
        }
        private ObjectSet<Студент> _Студент;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<ОценкаПодробно> ОценкаПодробно
        {
            get
            {
                if ((_ОценкаПодробно == null))
                {
                    _ОценкаПодробно = base.CreateObjectSet<ОценкаПодробно>("ОценкаПодробно");
                }
                return _ОценкаПодробно;
            }
        }
        private ObjectSet<ОценкаПодробно> _ОценкаПодробно;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<СтудентГруппа> СтудентГруппа
        {
            get
            {
                if ((_СтудентГруппа == null))
                {
                    _СтудентГруппа = base.CreateObjectSet<СтудентГруппа>("СтудентГруппа");
                }
                return _СтудентГруппа;
            }
        }
        private ObjectSet<СтудентГруппа> _СтудентГруппа;

        #endregion

        #region Методы AddTo
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Группа. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToГруппа(Группа группа)
        {
            base.AddObject("Группа", группа);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Дисциплина. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToДисциплина(Дисциплина дисциплина)
        {
            base.AddObject("Дисциплина", дисциплина);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Оценка. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToОценка(Оценка оценка)
        {
            base.AddObject("Оценка", оценка);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Студент. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToСтудент(Студент студент)
        {
            base.AddObject("Студент", студент);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet ОценкаПодробно. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToОценкаПодробно(ОценкаПодробно оценкаПодробно)
        {
            base.AddObject("ОценкаПодробно", оценкаПодробно);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet СтудентГруппа. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToСтудентГруппа(СтудентГруппа студентГруппа)
        {
            base.AddObject("СтудентГруппа", студентГруппа);
        }

        #endregion

    }

    #endregion

    #region Сущности
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="dbModel", Name="Группа")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Группа : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Группа.
        /// </summary>
        /// <param name="код">Исходное значение свойства Код.</param>
        public static Группа CreateГруппа(global::System.Int32 код)
        {
            Группа группа = new Группа();
            группа.Код = код;
            return группа;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Код
        {
            get
            {
                return _Код;
            }
            set
            {
                if (_Код != value)
                {
                    OnКодChanging(value);
                    ReportPropertyChanging("Код");
                    _Код = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Код");
                    OnКодChanged();
                }
            }
        }
        private global::System.Int32 _Код;
        partial void OnКодChanging(global::System.Int32 value);
        partial void OnКодChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Наименование
        {
            get
            {
                return _Наименование;
            }
            set
            {
                OnНаименованиеChanging(value);
                ReportPropertyChanging("Наименование");
                _Наименование = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Наименование");
                OnНаименованиеChanged();
            }
        }
        private global::System.String _Наименование;
        partial void OnНаименованиеChanging(global::System.String value);
        partial void OnНаименованиеChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dbModel", "FK_Студент_Группа", "Студент")]
        public EntityCollection<Студент> Студент
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Студент>("dbModel.FK_Студент_Группа", "Студент");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Студент>("dbModel.FK_Студент_Группа", "Студент", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="dbModel", Name="Дисциплина")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Дисциплина : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Дисциплина.
        /// </summary>
        /// <param name="код">Исходное значение свойства Код.</param>
        public static Дисциплина CreateДисциплина(global::System.Int32 код)
        {
            Дисциплина дисциплина = new Дисциплина();
            дисциплина.Код = код;
            return дисциплина;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Код
        {
            get
            {
                return _Код;
            }
            set
            {
                if (_Код != value)
                {
                    OnКодChanging(value);
                    ReportPropertyChanging("Код");
                    _Код = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Код");
                    OnКодChanged();
                }
            }
        }
        private global::System.Int32 _Код;
        partial void OnКодChanging(global::System.Int32 value);
        partial void OnКодChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Наименование
        {
            get
            {
                return _Наименование;
            }
            set
            {
                OnНаименованиеChanging(value);
                ReportPropertyChanging("Наименование");
                _Наименование = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Наименование");
                OnНаименованиеChanged();
            }
        }
        private global::System.String _Наименование;
        partial void OnНаименованиеChanging(global::System.String value);
        partial void OnНаименованиеChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dbModel", "FK_Оценка_Дисциплина", "Оценка")]
        public EntityCollection<Оценка> Оценка
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Оценка>("dbModel.FK_Оценка_Дисциплина", "Оценка");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Оценка>("dbModel.FK_Оценка_Дисциплина", "Оценка", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="dbModel", Name="Оценка")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Оценка : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Оценка.
        /// </summary>
        /// <param name="кодДисциплины">Исходное значение свойства КодДисциплины.</param>
        /// <param name="кодСтудента">Исходное значение свойства КодСтудента.</param>
        /// <param name="оценка1">Исходное значение свойства Оценка1.</param>
        public static Оценка CreateОценка(global::System.Int32 кодДисциплины, global::System.Int32 кодСтудента, global::System.Int32 оценка1)
        {
            Оценка оценка = new Оценка();
            оценка.КодДисциплины = кодДисциплины;
            оценка.КодСтудента = кодСтудента;
            оценка.Оценка1 = оценка1;
            return оценка;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 КодДисциплины
        {
            get
            {
                return _КодДисциплины;
            }
            set
            {
                if (_КодДисциплины != value)
                {
                    OnКодДисциплиныChanging(value);
                    ReportPropertyChanging("КодДисциплины");
                    _КодДисциплины = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("КодДисциплины");
                    OnКодДисциплиныChanged();
                }
            }
        }
        private global::System.Int32 _КодДисциплины;
        partial void OnКодДисциплиныChanging(global::System.Int32 value);
        partial void OnКодДисциплиныChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 КодСтудента
        {
            get
            {
                return _КодСтудента;
            }
            set
            {
                if (_КодСтудента != value)
                {
                    OnКодСтудентаChanging(value);
                    ReportPropertyChanging("КодСтудента");
                    _КодСтудента = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("КодСтудента");
                    OnКодСтудентаChanged();
                }
            }
        }
        private global::System.Int32 _КодСтудента;
        partial void OnКодСтудентаChanging(global::System.Int32 value);
        partial void OnКодСтудентаChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Оценка1
        {
            get
            {
                return _Оценка1;
            }
            set
            {
                OnОценка1Changing(value);
                ReportPropertyChanging("Оценка1");
                _Оценка1 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Оценка1");
                OnОценка1Changed();
            }
        }
        private global::System.Int32 _Оценка1;
        partial void OnОценка1Changing(global::System.Int32 value);
        partial void OnОценка1Changed();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dbModel", "FK_Оценка_Дисциплина", "Дисциплина")]
        public Дисциплина Дисциплина
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Дисциплина>("dbModel.FK_Оценка_Дисциплина", "Дисциплина").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Дисциплина>("dbModel.FK_Оценка_Дисциплина", "Дисциплина").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Дисциплина> ДисциплинаReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Дисциплина>("dbModel.FK_Оценка_Дисциплина", "Дисциплина");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Дисциплина>("dbModel.FK_Оценка_Дисциплина", "Дисциплина", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dbModel", "FK_Оценка_Студент", "Студент")]
        public Студент Студент
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Студент>("dbModel.FK_Оценка_Студент", "Студент").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Студент>("dbModel.FK_Оценка_Студент", "Студент").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Студент> СтудентReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Студент>("dbModel.FK_Оценка_Студент", "Студент");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Студент>("dbModel.FK_Оценка_Студент", "Студент", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="dbModel", Name="ОценкаПодробно")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ОценкаПодробно : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта ОценкаПодробно.
        /// </summary>
        /// <param name="кодДисциплины">Исходное значение свойства КодДисциплины.</param>
        /// <param name="кодСтудента">Исходное значение свойства КодСтудента.</param>
        /// <param name="оценка">Исходное значение свойства Оценка.</param>
        public static ОценкаПодробно CreateОценкаПодробно(global::System.Int32 кодДисциплины, global::System.Int32 кодСтудента, global::System.Int32 оценка)
        {
            ОценкаПодробно оценкаПодробно = new ОценкаПодробно();
            оценкаПодробно.КодДисциплины = кодДисциплины;
            оценкаПодробно.КодСтудента = кодСтудента;
            оценкаПодробно.Оценка = оценка;
            return оценкаПодробно;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 КодДисциплины
        {
            get
            {
                return _КодДисциплины;
            }
            set
            {
                if (_КодДисциплины != value)
                {
                    OnКодДисциплиныChanging(value);
                    ReportPropertyChanging("КодДисциплины");
                    _КодДисциплины = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("КодДисциплины");
                    OnКодДисциплиныChanged();
                }
            }
        }
        private global::System.Int32 _КодДисциплины;
        partial void OnКодДисциплиныChanging(global::System.Int32 value);
        partial void OnКодДисциплиныChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 КодСтудента
        {
            get
            {
                return _КодСтудента;
            }
            set
            {
                if (_КодСтудента != value)
                {
                    OnКодСтудентаChanging(value);
                    ReportPropertyChanging("КодСтудента");
                    _КодСтудента = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("КодСтудента");
                    OnКодСтудентаChanged();
                }
            }
        }
        private global::System.Int32 _КодСтудента;
        partial void OnКодСтудентаChanging(global::System.Int32 value);
        partial void OnКодСтудентаChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Оценка
        {
            get
            {
                return _Оценка;
            }
            set
            {
                if (_Оценка != value)
                {
                    OnОценкаChanging(value);
                    ReportPropertyChanging("Оценка");
                    _Оценка = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Оценка");
                    OnОценкаChanged();
                }
            }
        }
        private global::System.Int32 _Оценка;
        partial void OnОценкаChanging(global::System.Int32 value);
        partial void OnОценкаChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ФИО
        {
            get
            {
                return _ФИО;
            }
            set
            {
                OnФИОChanging(value);
                ReportPropertyChanging("ФИО");
                _ФИО = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ФИО");
                OnФИОChanged();
            }
        }
        private global::System.String _ФИО;
        partial void OnФИОChanging(global::System.String value);
        partial void OnФИОChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Группа
        {
            get
            {
                return _Группа;
            }
            set
            {
                OnГруппаChanging(value);
                ReportPropertyChanging("Группа");
                _Группа = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Группа");
                OnГруппаChanged();
            }
        }
        private global::System.String _Группа;
        partial void OnГруппаChanging(global::System.String value);
        partial void OnГруппаChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Дисциплина
        {
            get
            {
                return _Дисциплина;
            }
            set
            {
                OnДисциплинаChanging(value);
                ReportPropertyChanging("Дисциплина");
                _Дисциплина = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Дисциплина");
                OnДисциплинаChanged();
            }
        }
        private global::System.String _Дисциплина;
        partial void OnДисциплинаChanging(global::System.String value);
        partial void OnДисциплинаChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> КодГруппы
        {
            get
            {
                return _КодГруппы;
            }
            set
            {
                OnКодГруппыChanging(value);
                ReportPropertyChanging("КодГруппы");
                _КодГруппы = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("КодГруппы");
                OnКодГруппыChanged();
            }
        }
        private Nullable<global::System.Int32> _КодГруппы;
        partial void OnКодГруппыChanging(Nullable<global::System.Int32> value);
        partial void OnКодГруппыChanged();

        #endregion

    
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="dbModel", Name="Студент")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Студент : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Студент.
        /// </summary>
        /// <param name="код">Исходное значение свойства Код.</param>
        public static Студент CreateСтудент(global::System.Int32 код)
        {
            Студент студент = new Студент();
            студент.Код = код;
            return студент;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Код
        {
            get
            {
                return _Код;
            }
            set
            {
                if (_Код != value)
                {
                    OnКодChanging(value);
                    ReportPropertyChanging("Код");
                    _Код = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Код");
                    OnКодChanged();
                }
            }
        }
        private global::System.Int32 _Код;
        partial void OnКодChanging(global::System.Int32 value);
        partial void OnКодChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> КодГруппы
        {
            get
            {
                return _КодГруппы;
            }
            set
            {
                OnКодГруппыChanging(value);
                ReportPropertyChanging("КодГруппы");
                _КодГруппы = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("КодГруппы");
                OnКодГруппыChanged();
            }
        }
        private Nullable<global::System.Int32> _КодГруппы;
        partial void OnКодГруппыChanging(Nullable<global::System.Int32> value);
        partial void OnКодГруппыChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ФИО
        {
            get
            {
                return _ФИО;
            }
            set
            {
                OnФИОChanging(value);
                ReportPropertyChanging("ФИО");
                _ФИО = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ФИО");
                OnФИОChanged();
            }
        }
        private global::System.String _ФИО;
        partial void OnФИОChanging(global::System.String value);
        partial void OnФИОChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dbModel", "FK_Студент_Группа", "Группа")]
        public Группа Группа
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Группа>("dbModel.FK_Студент_Группа", "Группа").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Группа>("dbModel.FK_Студент_Группа", "Группа").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Группа> ГруппаReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Группа>("dbModel.FK_Студент_Группа", "Группа");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Группа>("dbModel.FK_Студент_Группа", "Группа", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("dbModel", "FK_Оценка_Студент", "Оценка")]
        public EntityCollection<Оценка> Оценка
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Оценка>("dbModel.FK_Оценка_Студент", "Оценка");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Оценка>("dbModel.FK_Оценка_Студент", "Оценка", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="dbModel", Name="СтудентГруппа")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class СтудентГруппа : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта СтудентГруппа.
        /// </summary>
        /// <param name="код">Исходное значение свойства Код.</param>
        public static СтудентГруппа CreateСтудентГруппа(global::System.Int32 код)
        {
            СтудентГруппа студентГруппа = new СтудентГруппа();
            студентГруппа.Код = код;
            return студентГруппа;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Код
        {
            get
            {
                return _Код;
            }
            set
            {
                if (_Код != value)
                {
                    OnКодChanging(value);
                    ReportPropertyChanging("Код");
                    _Код = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Код");
                    OnКодChanged();
                }
            }
        }
        private global::System.Int32 _Код;
        partial void OnКодChanging(global::System.Int32 value);
        partial void OnКодChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> КодГруппы
        {
            get
            {
                return _КодГруппы;
            }
            set
            {
                OnКодГруппыChanging(value);
                ReportPropertyChanging("КодГруппы");
                _КодГруппы = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("КодГруппы");
                OnКодГруппыChanged();
            }
        }
        private Nullable<global::System.Int32> _КодГруппы;
        partial void OnКодГруппыChanging(Nullable<global::System.Int32> value);
        partial void OnКодГруппыChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ФИО
        {
            get
            {
                return _ФИО;
            }
            set
            {
                OnФИОChanging(value);
                ReportPropertyChanging("ФИО");
                _ФИО = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ФИО");
                OnФИОChanged();
            }
        }
        private global::System.String _ФИО;
        partial void OnФИОChanging(global::System.String value);
        partial void OnФИОChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Наименование
        {
            get
            {
                return _Наименование;
            }
            set
            {
                OnНаименованиеChanging(value);
                ReportPropertyChanging("Наименование");
                _Наименование = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Наименование");
                OnНаименованиеChanged();
            }
        }
        private global::System.String _Наименование;
        partial void OnНаименованиеChanging(global::System.String value);
        partial void OnНаименованиеChanged();

        #endregion

    
    }

    #endregion

    
}
